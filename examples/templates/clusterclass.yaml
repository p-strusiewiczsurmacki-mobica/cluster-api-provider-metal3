---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3ClusterTemplate
metadata:
  name: example-cluster-template
spec:
  template:
    spec:
      controlPlaneEndpoint:
        host: 127.0.0.1
        port: 6443
      noCloudProvider: true
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: example-controlplane
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            extraArgs:
              cloud-provider: baremetal
          controllerManager:
            extraArgs:
              cloud-provider: baremetal
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: baremetal
            name: '{{ ds.meta_data.local_hostname }}'
        joinConfiguration:
          controlPlane: {}
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: baremetal
            name: '{{ ds.meta_data.local_hostname }}'
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3MachineTemplate
metadata:
  name: example-md-0
spec:
  nodeReuse: false
  template:
    spec:
      automatedCleaningMode: metadata
      image:
        checksum: ${IMAGE_CHECKSUM}
        checksumType: ${IMAGE_CHECKSUM_TYPE}
        format: ${IMAGE_FORMAT}
        url: http://example.com
      dataTemplate:
        name: example-md-metadata
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3DataTemplate
metadata:
  name: example-md-metadata
spec:
  clusterName: example
  metaData:
    strings:
      - key: abc
        value: def
    indexes:
      - key: index_0_1
        offset: 0
        step: 1
      - key: index_3
        offset: 3
      - key: index_5_2
        offset: 5
        step: 2
    objectNames:
      - key: machine_name
        object: machine
      - key: metal3machine_name
        object: metal3machine
      - key: bmh_name
        object: baremetalhost
    ipAddressesFromIPPool:
      - key: ip_1
        name: pool1
      - key: ip_2
        name: pool2
      - key: ip6_1
        name: pool6-1
      - key: ip6_2
        name: pool6-2
    prefixesFromIPPool:
      - key: prefix_1
        name: pool1
      - key: prefix_2
        name: pool2
      - key: prefix6_1
        name: pool6-1
      - key: prefix6_2
        name: pool6-2
    gatewaysFromIPPool:
      - key: gateway_1
        name: pool1
      - key: gateway_2
        name: pool2
      - key: gateway6_1
        name: pool6-1
      - key: gateway6_2
        name: pool6-2
    fromHostInterfaces:
      - key: mac
        interface: eth0
  networkData:
    links:
      ethernets:
        - type: phy
          id: enp1s0
          macAddress:
            fromHostInterface: eth0
        - type: phy
          id: enp2s0
          macAddress:
            fromHostInterface: eth1
    networks:
      ipv4DHCP:
        - id: provisioning
          link: enp1s0
      ipv4:
        - id: baremetal
          link: enp2s0
          ipAddressFromIPPool: pool1
          routes:
            - network: 0.0.0.0
              prefix: 0
              gateway:
                fromIPPool: pool1
              services:
                dns:
                  - 8.8.4.4
    services:
      dns:
        - 8.8.8.8
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: example-md-0
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: '{{ ds.meta_data.hostname }}'
          kubeletExtraArgs:
            cloud-provider: baremetal
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3MachineTemplate
metadata:
  name: example-controlplane
spec:
  nodeReuse: false
  template:
    spec:
      automatedCleaningMode: metadata
      image:
        checksum: ${IMAGE_CHECKSUM}
        checksumType: ${IMAGE_CHECKSUM_TYPE}
        format: ${IMAGE_FORMAT}
        url: ${IMAGE_URL}
      dataTemplate:
        name: example-cp-metadata
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3DataTemplate
metadata:
  name: example-cp-metadata
spec:
  clusterName: example
  metaData:
    strings:
      - key: abc
        value: def
    indexes:
      - key: index_0_1
        offset: 0
        step: 1
      - key: index_3
        offset: 3
      - key: index_5_2
        offset: 5
        step: 2
    objectNames:
      - key: machine_name
        object: machine
      - key: metal3machine_name
        object: metal3machine
      - key: bmh_name
        object: baremetalhost
    ipAddressesFromIPPool:
      - key: ip_1
        name: pool1
      - key: ip_2
        name: pool2
      - key: ip6_1
        name: pool6-1
      - key: ip6_2
        name: pool6-2
    prefixesFromIPPool:
      - key: prefix_1
        name: pool1
      - key: prefix_2
        name: pool2
      - key: prefix6_1
        name: pool6-1
      - key: prefix6_2
        name: pool6-2
    gatewaysFromIPPool:
      - key: gateway_1
        name: pool1
      - key: gateway_2
        name: pool2
      - key: gateway6_1
        name: pool6-1
      - key: gateway6_2
        name: pool6-2
    fromHostInterfaces:
      - key: mac
        interface: eth0
  networkData:
    links:
      ethernets:
        - type: phy
          id: enp1s0
          macAddress:
            fromHostInterface: eth0
        - type: phy
          id: enp2s0
          macAddress:
            fromHostInterface: eth1
    networks:
      ipv4DHCP:
        - id: provisioning
          link: enp1s0
      ipv4:
        - id: baremetal
          link: enp2s0
          ipAddressFromIPPool: pool1
          routes:
            - network: 0.0.0.0
              prefix: 0
              gateway:
                fromIPPool: pool1
              services:
                dns:
                  - 8.8.4.4
    services:
      dns:
        - 8.8.8.8
---
apiVersion: ipam.metal3.io/v1alpha1
kind: IPPool
metadata:
  name: pool1
spec:
  clusterName: example
  pools:
    - start: 192.168.0.10
      end: 192.168.0.250
      prefix: 24
      gateway: 192.168.0.1
  namePrefix: pool1
---
apiVersion: ipam.metal3.io/v1alpha1
kind: IPPool
metadata:
  name: pool2
spec:
  clusterName: example
  pools:
    - subnet: 192.168.1.0/24
  prefix: 25
  gateway: 192.168.1.1
  namePrefix: pool2
---
apiVersion: ipam.metal3.io/v1alpha1
kind: IPPool
metadata:
  name: pool6-1
spec:
  clusterName: example
  pools:
    - start: 2001::10
      end: 2001::ff00
      prefix: 96
      gateway: 2001::1
  namePrefix: pool6-1
---
apiVersion: ipam.metal3.io/v1alpha1
kind: IPPool
metadata:
  name: pool6-2
spec:
  clusterName: example
  pools:
    - subnet: 2001:ABC::0/96
  prefix: 96
  gateway: 2001:ABC::1
  namePrefix: pool6-2
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: example-clusterclass
spec:
  variables:
  - name: controlPlaneEndpoint
    required: true
    schema:
      openAPIV3Schema:
        type: object
        properties: 
          host: 
            type: string
          port:
            type: integer
  - name: image
    schema:
      openAPIV3Schema:
        type: object
        properties: 
          checksum: 
            type: string
          checksumType:
            type: string
          format:
            type: string
          url:
            type: string
  patches:
  - name: controlPlaneEndpointSub
    description: Overrides controlPlaneEndpoint data of Metal3ClusterTemplate used by the cluster
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: Metal3ClusterTemplate
        matchResources:
          infrastructureCluster: true
      jsonPatches:
      - op: add
        path: /spec/template/spec/controlPlaneEndpoint
        valueFrom:
          variable: controlPlaneEndpoint
  - name: imageSub
    description: Overrides image data for worker nodes of example-worker class
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: Metal3MachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - example-worker
      jsonPatches:
      - op: replace
        path: /spec/template/spec/image/checksum
        valueFrom:
          variable: image.checksum
      - op: replace
        path: /spec/template/spec/image/checksumType
        valueFrom:
          variable: image.checksumType
      - op: replace
        path: /spec/template/spec/image/format
        valueFrom:
          variable: image.format
      - op: replace
        path: /spec/template/spec/image/url
        valueFrom:
          variable: image.url
  - name: controlPlaneImageSub
    description: Overrides image data for worker nodes of control plane node
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: Metal3MachineTemplate
        matchResources:
          controlPlane: true
      jsonPatches:
      - op: replace
        path: /spec/template/spec/image/checksum
        valueFrom:
          variable: image.checksum
      - op: replace
        path: /spec/template/spec/image/checksumType
        valueFrom:
          variable: image.checksumType
      - op: replace
        path: /spec/template/spec/image/format
        valueFrom:
          variable: image.format
      - op: replace
        path: /spec/template/spec/image/url
        valueFrom:
          variable: image.url
  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: example-controlplane
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: Metal3MachineTemplate
        name: example-md-0
    # This will create a MachineHealthCheck for ControlPlane machines.
    machineHealthCheck:
      nodeStartupTimeout: 3m
      maxUnhealthy: 33%
      unhealthyConditions:
        - type: Ready
          status: Unknown
          timeout: 300s
        - type: Ready
          status: "False"
          timeout: 300s
  workers:
    machineDeployments:
    - class: example-worker
      template:
        metadata:
          labels:
            cluster.x-k8s.io/cluster-name: example
            nodepool: nodepool-0
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            name: example-md-0
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: Metal3MachineTemplate
            name: example-md-0
      # This will create a health check for each deployment created with the "test-worker" MachineDeploymentClass
      machineHealthCheck:
        unhealthyConditions:
          - type: Ready
            status: Unknown
            timeout: 300s
          - type: Ready
            status: "False"
            timeout: 300s
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: Metal3ClusterTemplate
      name: example-cluster-template
